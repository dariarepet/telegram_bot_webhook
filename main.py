import os
from flask import Flask, request
from telegram import Update, Bot, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
)

TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID"))

app = Flask(__name__)
bot = Bot(token=TOKEN)

application = ApplicationBuilder().token(TOKEN).build()

# –ö–Ω–æ–ø–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏
keyboard = [
    [InlineKeyboardButton("‚ÑπÔ∏è –û–±–æ –º–Ω–µ", url="https://daria-emelianova.yonote.ru/share/rus")],
    [InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ", url="https://forms.yandex.ru/u/683ad41feb61464bc78c1b3e")],
    [InlineKeyboardButton("üí≥ –ê–±–æ–Ω–µ–º–µ–Ω—Ç—ã", url="https://daria-emelianova.yonote.ru/share/abonement")],
    [InlineKeyboardButton("üéì –ö—É—Ä—Å –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤", url="https://daria-emelianova.yonote.ru/share/kabinet")],
    [InlineKeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question")]
]
reply_markup = InlineKeyboardMarkup(keyboard)

@app.route("/")
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route(f"/{TOKEN}", methods=["POST"])
async def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    await application.process_update(update)
    return "ok"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –Ø –±–æ—Ç –î–∞—Ä—å–∏ –ï–º–µ–ª—å—è–Ω–æ–≤–æ–π. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_markup
    )

async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ —Å—é–¥–∞, –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –î–∞—Ä—å–µ."
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    username = user.username or user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç —Å –Ω–∏–∫–æ–º –∏ –∞–π–¥–∏
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=f"üì© –í–æ–ø—Ä–æ—Å –æ—Ç @{username} (id {user.id}):\n\n{text}"
    )
    await update.message.reply_text("–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –Ø —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—á—É ‚ú®")

application.add_handler(CommandHandler("start", start))
application.add_handler(CallbackQueryHandler(ask_question, pattern="ask_question"))
application.add_handler(MessageHandler(~filters.COMMAND & filters.TEXT, handle_message))

async def set_webhook():
    await bot.set_webhook(f"{WEBHOOK_URL}/{TOKEN}")

if __name__ == "__main__":
    import asyncio
    asyncio.run(set_webhook())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

